package com.dao;

import com.model.Employee;
import java.sql.*;
import java.util.*;

public class EmployeeDAO {
    private final String jdbcURL = "jdbc:mysql://localhost:3306/yourdbname";
    private final String jdbcUsername = "root";
    private final String jdbcPassword = "yourpassword";

    private static final String INSERT_EMPLOYEE_SQL = "INSERT INTO Employee (Empno, EmpName, DoJ, Gender, Bsalary) VALUES (?, ?, ?, ?, ?)";
    private static final String SELECT_ALL_EMPLOYEES = "SELECT * FROM Employee";
    private static final String UPDATE_EMPLOYEE_SQL = "UPDATE Employee SET EmpName = ?, DoJ = ?, Gender = ?, Bsalary = ? WHERE Empno = ?";
    private static final String DELETE_EMPLOYEE_SQL = "DELETE FROM Employee WHERE Empno = ?";
    private static final String REPORT_QUERY = "SELECT * FROM Employee WHERE Bsalary > ?";

    protected Connection getConnection() throws SQLException {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            return DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
        } catch (ClassNotFoundException e) {
            throw new SQLException(e);
        }
    }

    public void insertEmployee(Employee emp) throws SQLException {
        try (Connection conn = getConnection(); PreparedStatement stmt = conn.prepareStatement(INSERT_EMPLOYEE_SQL)) {
            stmt.setInt(1, emp.getEmpno());
            stmt.setString(2, emp.getEmpName());
            stmt.setDate(3, new java.sql.Date(emp.getDoj().getTime()));
            stmt.setString(4, emp.getGender());
            stmt.setDouble(5, emp.getBsalary());
            stmt.executeUpdate();
        }
    }

    public List<Employee> selectAllEmployees() throws SQLException {
        List<Employee> list = new ArrayList<>();
        try (Connection conn = getConnection(); PreparedStatement stmt = conn.prepareStatement(SELECT_ALL_EMPLOYEES)) {
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                Employee e = new Employee();
                e.setEmpno(rs.getInt("Empno"));
                e.setEmpName(rs.getString("EmpName"));
                e.setDoj(rs.getDate("DoJ"));
                e.setGender(rs.getString("Gender"));
                e.setBsalary(rs.getDouble("Bsalary"));
                list.add(e);
            }
        }
        return list;
    }

    public boolean updateEmployee(Employee emp) throws SQLException {
        try (Connection conn = getConnection(); PreparedStatement stmt = conn.prepareStatement(UPDATE_EMPLOYEE_SQL)) {
            stmt.setString(1, emp.getEmpName());
            stmt.setDate(2, new java.sql.Date(emp.getDoj().getTime()));
            stmt.setString(3, emp.getGender());
            stmt.setDouble(4, emp.getBsalary());
            stmt.setInt(5, emp.getEmpno());
            return stmt.executeUpdate() > 0;
        }
    }

    public boolean deleteEmployee(int empno) throws SQLException {
        try (Connection conn = getConnection(); PreparedStatement stmt = conn.prepareStatement(DELETE_EMPLOYEE_SQL)) {
            stmt.setInt(1, empno);
            return stmt.executeUpdate() > 0;
        }
    }

    public List<Employee> getReport(double minSalary) throws SQLException {
        List<Employee> list = new ArrayList<>();
        try (Connection conn = getConnection(); PreparedStatement stmt = conn.prepareStatement(REPORT_QUERY)) {
            stmt.setDouble(1, minSalary);
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                Employee e = new Employee();
                e.setEmpno(rs.getInt("Empno"));
                e.setEmpName(rs.getString("EmpName"));
                e.setDoj(rs.getDate("DoJ"));
                e.setGender(rs.getString("Gender"));
                e.setBsalary(rs.getDouble("Bsalary"));
                list.add(e);
            }
        }
        return list;
    }
}
